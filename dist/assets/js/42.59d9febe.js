(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{567:function(s,t,a){"use strict";a.r(t);var e=a(6),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git总结"}},[s._v("#")]),s._v(" git总结")]),s._v(" "),a("h2",{attrs:{id:"_1-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装"}},[s._v("#")]),s._v(" 1.安装")]),s._v(" "),a("p",[s._v("安装网上的教程就行了🚗")]),s._v(" "),a("h2",{attrs:{id:"_2-环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-环境配置"}},[s._v("#")]),s._v(" 2.环境配置")]),s._v(" "),a("p",[s._v("配置用户的标识")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config ---global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"用户名"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"邮箱地址"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global --list  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看配置是否成功")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"_3-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本概念"}},[s._v("#")]),s._v(" 3.基本概念")]),s._v(" "),a("p",[s._v("git本地有三个工作区域，分别是工作区（Working Directory），暂存区（Stage/Index）、资源库（Repository或Git Directory），如果在加上远程的git仓库（Remote Directory）就可以分为四个工作区域。文件在这四个区域之前的转换关系如下")]),s._v(" "),a("ul",[a("li",[s._v("**工作区：**就是你在电脑里能看到的目录。")]),s._v(" "),a("li",[s._v("**暂存区：**英文叫 stage 或 index。一般存放在 "),a("strong",[s._v(".git")]),s._v(" 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。")]),s._v(" "),a("li",[s._v("**资源库：**工作区有一个隐藏目录 "),a("strong",[s._v(".git")]),s._v("，这个不算工作区，而是 Git 的版本库。")]),s._v(" "),a("li",[s._v("**远程仓库：**远程托管的服务器，如github、gitee等")])]),s._v(" "),a("p",[s._v("git的工作流程一般是：")]),s._v(" "),a("ol",[a("li",[s._v("在工作目录中添加、修改文件")]),s._v(" "),a("li",[s._v("将需要进行版本管理的文件放入暂存区域  "),a("code",[s._v("git add .")])]),s._v(" "),a("li",[s._v("将暂存区域的文件提交到git仓库 `git commit -m 'first commit'")])]),s._v(" "),a("p",[s._v("因此，git管理的文件有三种状态：已修改（modified），已暂存（staged），已提交（committed）")]),s._v(" "),a("h2",{attrs:{id:"_4-文件操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-文件操作"}},[s._v("#")]),s._v(" 4.文件操作")]),s._v(" "),a("h3",{attrs:{id:"文件的4种状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件的4种状态"}},[s._v("#")]),s._v(" 文件的4种状态")]),s._v(" "),a("p",[s._v("版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不如可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。")]),s._v(" "),a("ul",[a("li",[s._v("Untracked: 未跟踪，至文件在文件夹中，但并没有加入git库，不参与版本控制，通过"),a("code",[s._v("git add")]),s._v("状态变为"),a("code",[s._v("staged")]),s._v(".")]),s._v(" "),a("li",[s._v("Unmodify: 文件已经入库，未修改，即版本库中的文件快照内容和文件夹中完全一致，这种类型的文件有两种去处，如果他被修改，而变为"),a("code",[s._v("modified")]),s._v(".如果使用"),a("code",[s._v("git rm")]),s._v("移出版本库，则成为"),a("code",[s._v("untracked")]),s._v("文件")]),s._v(" "),a("li",[s._v("Modified: 文件已修改，仅仅是修改，并没有进行其他的操作，这个文件也有两个去处，通过"),a("code",[s._v("git add")]),s._v(" 可进入暂存"),a("code",[s._v("staged")]),s._v("状态，使用"),a("code",[s._v("git checkout")]),s._v("则丢弃修改过，返回"),a("code",[s._v("unmodfiy")]),s._v("状态，这个"),a("code",[s._v("git checkout")]),s._v("即从库中取出文件，覆盖当前修改")]),s._v(" "),a("li",[s._v("Staged: 暂存状态，执行"),a("code",[s._v("git commit")]),s._v(" 则将修改同步到库中，这时库中的文件和本地文件又变为一致，文件为"),a("code",[s._v("unmodify")]),s._v("状态，执行"),a("code",[s._v("git reset HEAD filename")]),s._v("取消暂存，文件状态为"),a("code",[s._v("modified")])])]),s._v(" "),a("p",[s._v("可以通过下面命令查看文件的状态")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看所有")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看单个文件")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"_5-git-分支管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-git-分支管理"}},[s._v("#")]),s._v(" 5.Git 分支管理")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init -y "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git init 默认创建一个master")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("手动创建分支命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建一个test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("切换分支命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("我们也可以使用 git checkout -b (branchname) 命令来创建新分支并立即切换到该分支下，从而在该分支中操作。")]),s._v(" "),a("p",[s._v("列出分支基本命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -a "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看所有分支包括远程分支")]),s._v("\n* master  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *为当前分支")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("删除分支命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("本地分支"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin --delete "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("远程分支"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除远程分支")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("远程分支命令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_6-克隆仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-克隆仓库"}},[s._v("#")]),s._v(" 6.克隆仓库")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone 仓库地址\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"本地连接远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地连接远程仓库"}},[s._v("#")]),s._v(" 本地连接远程仓库")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git初始化")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置remote地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" 仓库地址\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将全部文件加入git版本管理 .的意思是将当前文件夹下的全部文件放到版本管理中")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#提交文件 使用-m 编写注释")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fisrt commit"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#推送到远程分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"git首次push本地没有readme文件提示pull解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git首次push本地没有readme文件提示pull解决"}},[s._v("#")]),s._v(" git首次push本地没有README文件提示pull解决")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull --rebase origin master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);